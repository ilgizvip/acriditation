
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	//УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ДатаСреза = ТекущаяДатаСеанса();
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТекущийЭлемент = Элементы.Аккредитуемый;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы



#КонецОбласти

#Область ОбработчикиКомандФормы


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

//	УсловноеОформление.Элементы.Очистить();

//	//

//	Элемент = УсловноеОформление.Элементы.Добавить();

//	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
//	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ГруппыПользователейГруппа.Имя);

//	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
//	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ГруппыПользователей.ПомеченоПользователей");
//	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
//	ОтборЭлемента.ПравоеЗначение = 0;

//	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт("Arial", 10, Истина));
//	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("ГруппыПользователей.НаименованиеГруппыИПомеченоПользователей"));

КонецПроцедуры


#КонецОбласти
